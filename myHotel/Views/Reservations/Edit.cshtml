@model myHotel.Models.Reservation

@{
    ViewBag.Title = "Edit";
}


<h2>Edit Reservation</h2>
<p>
    @Html.ActionLink("New Reservation", "NewReservation", "Admin", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Current Reservations", "Index", "Reservations", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Past Reservations", "PastReservations", "Reservations", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Cancellations", "Cancellations", "Admin", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Cancellation Requests", "CancelRequests", "Admin", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Incomplete Reservations", "Incomplete", "Reservations", null, new { @class = "btn btn-default" })

</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ReservationID)

        <div class="form-group">
            <h4>Changing Reservation for @Html.ActionLink(@Model.Customer.customerName, "Details", "Customer",new { id = @Model.customerID }, null)</h4>
            Reservation Date:
            @Html.EditorFor(model => model.resDate, new { htmlAttributes = new { @style ="display:none" } })
           @Html.EditorFor(model => model.customerID, new { htmlAttributes = new { @style ="display:none" } })
        </div>
        <div class="form-group">
            <div class="col-md-10">
                Room:
                @Html.DropDownList("roomNumber", null, htmlAttributes: new { @id = "rno" })
                <label id="type"></label>
                <script>
                    var e, strUser;
                    e = document.getElementById("rno");
                    e.addEventListener("click", function () {
                        strUser = e.value;
                        document.getElementById("type").innerHTML = "The selected room number is " + strUser;
                    })
                </script>
                @Html.ValidationMessageFor(model => model.roomNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                Adults:
                @Html.EditorFor(model => model.adult, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adult, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                Children:
                @Html.EditorFor(model => model.children, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.children, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                Check in Date:
                @Html.EditorFor(model => model.checkin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.checkin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                Checkout Date:
                @Html.EditorFor(model => model.checkout, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.checkout, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-10">
                Breakfast:
                <div class="checkbox">
                    @Html.EditorFor(model => model.breakfast)
                    @Html.ValidationMessageFor(model => model.breakfast, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                Shuttle:
                <div class="checkbox">
                    @Html.EditorFor(model => model.shuttle)
                    @Html.ValidationMessageFor(model => model.shuttle, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                Status:
                <select id="status" class="form-control" name="status">
                    <option value="">No Action</option>
                    <option value="Cancel Requested">Cancellation Requested</option>
                    <option value="Cancel Rejected">Cancellation Rejected</option>
                    <option value="Cancellation Accepted">Cancelled</option>
                    <option value="Refunded">Refunded</option>



                </select>
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
